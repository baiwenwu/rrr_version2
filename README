这个版本，不支持64位的
1，为了在RRR结构上进行高效Rank查询，现提供
	两级表查询结构（大块表和小块表） + （c,o）对查询结构

2，大块，小块长度约定：
	因为RRR每个(c,o)对对应的是15 bits，c的类别为15 + 1 = 16，为了支持32位的内存快速存取，现取小块的长度为 15 * 32 bits。只需要8 bits就能存储这个小块中1的个数。
	为了对齐，大块的大小为15 * 32 * t bits，即1个大块中包含t个小块，参数可调。理论上，t越大，查询越慢，空间占用越小，t越小，查询越快，空间占用越大。初始设定为t = 8。需t - 1次查询即可定位到小块，并且能实现交叉存取，提高cache命中率。

测试说明：
经过测试，利用popc和利用knuth的方法求得popcount(u64 i)值的时间一致，所以选择后者，空间省去一些
